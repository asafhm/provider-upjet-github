/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PullRequestObservation struct {

	// Head commit SHA of the Pull Request base.
	BaseSha *string `json:"baseSha,omitempty" tf:"base_sha,omitempty"`

	// Indicates Whether this Pull Request is a draft.
	Draft *bool `json:"draft,omitempty" tf:"draft,omitempty"`

	// Head commit SHA of the Pull Request head.
	HeadSha *string `json:"headSha,omitempty" tf:"head_sha,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// List of label names set on the Pull Request.
	// List of names of labels on the PR
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// The number of the Pull Request within the repository.
	Number *float64 `json:"number,omitempty" tf:"number,omitempty"`

	// Unix timestamp indicating the Pull Request creation time.
	OpenedAt *float64 `json:"openedAt,omitempty" tf:"opened_at,omitempty"`

	// GitHub login of the user who opened the Pull Request.
	// Username of the PR creator
	OpenedBy *string `json:"openedBy,omitempty" tf:"opened_by,omitempty"`

	// the current Pull Request state - can be "open", "closed" or "merged".
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The timestamp of the last Pull Request update.
	UpdatedAt *float64 `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type PullRequestParameters struct {

	// Name of the branch serving as the base of the Pull Request.
	// +kubebuilder:validation:Required
	BaseRef *string `json:"baseRef" tf:"base_ref,omitempty"`

	// Name of the base repository to retrieve the Pull Requests from.
	// +kubebuilder:validation:Required
	BaseRepository *string `json:"baseRepository" tf:"base_repository,omitempty"`

	// Body of the Pull Request.
	// +kubebuilder:validation:Optional
	Body *string `json:"body,omitempty" tf:"body,omitempty"`

	// Name of the branch serving as the head of the Pull Request.
	// +kubebuilder:validation:Required
	HeadRef *string `json:"headRef" tf:"head_ref,omitempty"`

	// Controls whether the base repository maintainers can modify the Pull Request. Default: false.
	// +kubebuilder:validation:Optional
	MaintainerCanModify *bool `json:"maintainerCanModify,omitempty" tf:"maintainer_can_modify,omitempty"`

	// Owner of the repository. If not provided, the provider's default owner is used.
	// +kubebuilder:validation:Optional
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// The title of the Pull Request.
	// +kubebuilder:validation:Required
	Title *string `json:"title" tf:"title,omitempty"`
}

// PullRequestSpec defines the desired state of PullRequest
type PullRequestSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PullRequestParameters `json:"forProvider"`
}

// PullRequestStatus defines the observed state of PullRequest.
type PullRequestStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PullRequestObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PullRequest is the Schema for the PullRequests API. Get information on a single GitHub Pull Request.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,github}
type PullRequest struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PullRequestSpec   `json:"spec"`
	Status            PullRequestStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PullRequestList contains a list of PullRequests
type PullRequestList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PullRequest `json:"items"`
}

// Repository type metadata.
var (
	PullRequest_Kind             = "PullRequest"
	PullRequest_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PullRequest_Kind}.String()
	PullRequest_KindAPIVersion   = PullRequest_Kind + "." + CRDGroupVersion.String()
	PullRequest_GroupVersionKind = CRDGroupVersion.WithKind(PullRequest_Kind)
)

func init() {
	SchemeBuilder.Register(&PullRequest{}, &PullRequestList{})
}
